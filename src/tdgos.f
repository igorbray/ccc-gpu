      subroutine TDGOS(Lstart,Lstop) 
                                                             
C Calculation of the Born GOS in length and velocity forms    
C in the direction of momentum transfer for channels and on-  
C shell points generated by CCO program.                      

C               1   2*omega          2                             
C   GOS(+/-q)= ---  ----2-- |T(+/-q)|                              
C              4*pi    q                                            
C                                                                    
C                                                                    
C                iPhi(l) J-l            2    l /la J l\  r,v          
C  T(+/-q)= SUM e       i   hat(l) hat(J) (-1) |      |  D (El,a)     
C           Jl                             ^   \0  0 0/   J           
C                             for -q only  |                          
                                    

      include 'par.f'                                        
                                                             
      COMMON/CONT/ CE(ncmax),CINT(ncmax),NCSTATES,ENERGY
      COMMON/channel/ iopen(nchan) !Indicates open channels (=1) 
      COMMON/BORN/ br(0:lamax,kmax,nchan),bv(0:lamax,kmax,nchan)
      COMMON/BORN2r/ Hr(0:lamax,nchan)
      COMMON/BORN2v/ Hv(0:lamax,nchan)
      COMMON /moment/ qq,omega
      COMMON /faza/ ph(0:lamax,nchan)
      dimension nopen(0:lamax,lamax+1)

      complex phase,ph
      dimension psi(maxr)
      complex Hr,Hv

      REAL*8 threej
      character*1 h(0:10) 
      data h / 's','p','d','f','g','h','n','o',
     >          'x','x','x'/
      complex Tpr (0:lamax,lamax+1), Tpv (0:lamax,lamax+1)
      complex Tmr (0:lamax,lamax+1), Tmv (0:lamax,lamax+1)
      complex ci,zi,Fp,Fm,r,v
      
C Kinematic variables

*      data Eo,Ea,theta  /5640.41,5500.,-1.00/ !Eb=75eV, n=2
*      data Eo,Ea,theta  /5599.,5500.,-0.45/ !Ea+Eb=20 eV
      data Eo,Ea,theta  /5570.41,5500.,-0.35/ !Eb=5ev, n=2
*      data Eo,Ea,theta  /5529.59,5500.,-0.35/ !Eb=5eV, n=1
*      data Eo,Ea,theta  /5534.59,5500.,-0.32/ !Eb=10eV, n=1
*      data Eo,Ea,theta  /5599.59,5500.,-1.00/ !Eb=75eV, n=1

      pi = acos(-1.)
      ci = (0.0, 1.0)                                         
      zi = (0.0, 0.0)                                         
      Ry = 13.6058
      deg= 180./pi
      AIP=24.59                 
      
      Eb = Eo-Ea-AIP
      fko = sqrt(Eo/Ry)
      fka = sqrt(Ea/Ry)
      fkb = sqrt(Eb/Ry)
      FQ  = sqrt(fko**2 + fka**2 - 2*fko*fka*cos(theta/deg))  
      thb = -asin(fka/FQ*sin(theta/deg))      
      Eb = Eo-Ea-24.59
      write(6, 110) Eo, Ea, Eb, fko,fka,fkb
      write(6,120) theta, FQ, Thb*deg
      if(abs(Eb-ENERGY).gt.0.01) STOP "Energy is not conserved"
      if(abs(qq-fq).gt. 1e-2)
     :   write(6,'(A,F9.4)') 'Entered      ', QQ
      
      const=2/pi * fka/fko /qq**4  !TDCS constant
      const=const*2             !To compensate WF normalization on energy in Ry

      const1=1/(2*pi) /qq**2                                
      const1=const1*2

      GS   =5.807
      
      write(6,100) QQ
      write(6,171)                                           !Title for GOS


C Initialization
      
      do la=0,lamax
         do na=1,lamax+1
            Tpr(la,na) = zi
            Tpv(la,na) = zi
            Tmr(la,na) = zi
            Tmv(la,na) = zi
         end do
      end do
      
      nm = 1
      lm = 0
      do J = 1, Lstop     
         nch = 0
 10      nch = nch + 1
         call  getchinfo (nch, nt, J, psi, maxpsi, ea, la, na, l)
         if (nch.ne.0) then
            EI = GS + ea
            if (na.gt.nm) nm = na
            if (la.gt.lm) lm = la
            nopen(la,na)=0
            if(iopen(nch).eq.1) nopen(la,na)=1
            phase = ph(J,nch)
            phi = atan(aimag(phase)/real(phase))

            r = Hr(j,nch)
            v = Hv(j,nch)

*            write(6,1954) nch,EI,na,h(la),h(l),omega*Ry,phi

            call IOT3(la,j,l,0,0,0,threej)
            ang= hat(l) * hat(j)**2
            ang=ang * threej
            Fp = (ci)**(l-J)         !* phase
            Fm = (ci)**(l-J)*(-1)**l !* phase
            Tpr(la,na) = Tpr(la,na) + Fp*ang*r
            Tpv(la,na) = Tpv(la,na) + Fp*ang*v    
            Tmr(la,na) = Tmr(la,na) + Fm*ang*r
            Tmv(la,na) = Tmv(la,na) + Fm*ang*v    
            go to 10
         end if
      end do

C Sort bound states into n,l
      
      do la=0,lm                
         do na=la+1,nm
            if(nopen(la,na).ne.0)then
               Gpr= const*abs(Tpr(la,na))**2
               Gmr= const*abs(Tmr(la,na))**2
               Gpv= const*abs(Tpv(la,na))**2*4/omega**2
               Gmv= const*abs(Tmv(la,na))**2*4/omega**2
               
               write(6,200)na,h(la),Gmr,Gmv,Gpr,Gpv
            end if
         end do
      end do
      write(6,'(A//)')'   '
         
C Sort bound states into n

      do na=1,nm
         Gpr = 0.
         Gmr = 0.
         Gpv = 0.
         Gmv = 0.
         do la=0,na-1                
            if(nopen(la,na).ne.0)then
               Gpr= Gpr+const*abs(Tpr(la,na))**2
               Gmr= Gmr+const*abs(Tmr(la,na))**2
               Gpv= Gpv+const*abs(Tpv(la,na))**2*4/omega**2
               Gmv= Gmv+const*abs(Tmv(la,na))**2*4/omega**2
            end if
         end do
         write(6,'(A,I1,6(E12.4,1x))')' n=',na,Gmr,Gmv,Gpr,Gpv
      end do
      write(6,'(A//)')'   '
         
         
 100  format(///6x,
     >'TRIPLE-DIFFERENTIAL GENERALIZED OSCILLATOR STRENGTHS Q =',F9.4/,
     >       6x,65('-')/ )
 110  format(//'            KINEMATICS OF THE REACTION',
     :       / '            --------------------------',
     :       / '         The Coplanar geometry of e2e setup',
     :      // '                  Incoming          Outgoing',
     :       / '                  electron          electrons',
     :       / '                                Fast        Slow',
     :       / ' ===============================================',
     :      // ' Energy,   eV     ',    3(F7.2,5X),
     :      // ' Momentum, a.u.   ',    3(F7.4,5X)//)
      
 120  format(/ '             TRANSFERRED MOMENTUM      ',
     :      / '             --------------------      ',
     :      / 'Scattering    Momentum   Transfered momentum',
     :      / 'angle, deg   transfered      angle, deg    '/,
     :         F10.3,2x,F10.4,2x,F10.3,2x)

 170    FORMAT(//'BOUND',9X,'TRIPLE  DIFFERENTIAL  CROSS  SECTION'/,
     >           'STATE       Direction  -Q',14x,'Direction  +Q',15x/,
     >    12x,2('r',12x,'v',12x)/,55('-'))
 171    FORMAT(//'BOUND',9X,' GENERALIZED  OSCILLATOR  STRENGTH'/,
     >           'STATE       Direction  -Q',14x,'Direction  +Q',15x/,
     >    12x,2('r',12x,'v',12x)/,55('-'))
 200  format(1x,I1,A1, 2x,12(E11.4,2x))
 1954 format(//11x,'CHANNEL ',I2/,
     >   11x,'Ion energy',F7.3/,
     >   11x,'Bound electron',I2,A1/,
     >   11x,'Free  electron k', A1/,
     >   11x,'Photon energy', F7.3/,
     >   11x,'Coulomb phase', 2F7.3)
      return
      end

      
