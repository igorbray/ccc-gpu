SOURCE =  main.f iqpackd.f rest.f form.f numerov.f sgi.f cc.f laguer.f  vmat.f first.f gpuvdirect.f \
    ipmhf.f fc.f hf.f vtail.f cisi.f hydr.f processt.f plql.f \
    corratom.f  derivative.f dmatr.f length.f multidipole.f  photo.f \
    velocity.f int.f step.f over.f hylleraas.f  posvmat.f positron.f \
    fit_rgrid.f redefine.f coul90.f rs6000.f bmatr.f polyborn.f lvborn.f \
    bes.f e2e.f  gos.f  tdgos.f blength.f jones.f lesech.f h2.f noblegas.f \
    e2e2.f radial2.f b2matr.f xmatr.f coefsS.f coefsP.f coefsD.f coefsF.f \
    coefsG.f coefsH.f coefsI.f \
     newcoefs7.f newcoefs8.f newcoefs9.f newcoefs10.f\
    newcoefs11.f newcoefs12.f newcoefs13.f newcoefs14.f newcoefs15.f \
    newcoefs16.f newcoefs17.f newcoefs18.f newcoefs19.f newcoefs20.f \
    andrey.f tmatccc.f lithium.f sbt.f redistribute.f alex.f logam.f eremenko.f90

OBJDIR=obj/$(PRECISION)

HOST = $(shell uname -n | cut -c1-4)
FC := mpifort
#a := -C -g -Ktrap=fp -traceback -Mllvm -mp -Mpreprocess -O0 -Iatom -Ihelium -Ihelium/$(OBJDIR) -module $(OBJDIR) -mcmodel=medium
#aO1 := -C -g -Ktrap=fp -traceback -Mllvm -mp -Mpreprocess -O0 -Iatom -Ihelium -Ihelium/$(OBJDIR) -module $(OBJDIR) -mcmodel=medium
a := -Mllvm -mp -Mpreprocess -O2 -Iatom -Ihelium -Ihelium/$(OBJDIR) -module $(OBJDIR) -mcmodel=medium
aO1 := -Mllvm -mp -Mpreprocess -O1 -Iatom -Ihelium -Ihelium/$(OBJDIR) -module $(OBJDIR) -mcmodel=medium
anomp := -Mllvm -Mpreprocess -O2 -Iatom -Ihelium -Ihelium/$(OBJDIR) -module $(OBJDIR) -mcmodel=medium 

l := -Mllvm -acc -mp  -L$(MKLROOT)/lib/intel64 -lmkl_scalapack_lp64 -lmkl_blacs_openmpi_lp64 -lmkl_gf_lp64 -lmkl_intel_thread -lmkl_core  -pgf90libs  

#l:= -L/group/pawsey0001/mcytowski/uptake/atomic/acc/trunk -lcuDOT -L$(MKLROOT)/lib/intel64 -lmkl_intel_lp64  -lmkl_core -lmkl_pgi_thread -liomp5 -lmkl_scalapack_lp64 -lmkl_blacs_intelmpi_lp64  -lm -L/pawsey/pgi/18.3/linux86-64/18.3/lib/ -lcudafor -lpgf90 -laccg -lpgm -lpgmp -laccg2 -L/pawsey/pgi/18.3/linux86-64/18.3/lib -laccn -lcudaforwrapblas -L${MAALI_CUDA_HOME}/lib64/ -lcudart -lcusparse -lcublas -L/group/pawsey0001/mcytowski/uptake/atomic/acc/trunk -lmap-sampler-pmpi -lmap-sampler -Wl,--eh-frame-hdr -Wl,-rpath=/group/pawsey0001/mcytowski/uptake/atomic/acc/trunk

ifeq ($(PRECISION),double)
  a := $(a) -r8  
  pga := -r8  
  aO1 := $(aO1) -r8
else
  pga := -r4  
  a := $(a)  #-align array32byte #no need for this if rest.f is compiled with -O0
  aO1 := $(aO1)
endif

a := $(a) -DNEW_SLEEPY_BARRIER -D_$(PRECISION)
aO1 := $(aO1) -DNEW_SLEEPY_BARRIER -D_$(PRECISION)

OBJS=$(SOURCE:%.f=$(OBJDIR)/%.o)

export a
export FC
export PRECISION
export OBJDIR


#info:
#	echo $(OBJECTDIR)
#	echo $(OBJS)

#ccc:  atom/hflib.a helium/helib.a $(OBJS) tmatccc.o  $(OBJDIR)
.PHONY: helium/$(OBJDIR)/helib.a  atom/$(OBJDIR)/hflib.a ccc 
ccc:  atom/$(OBJDIR)/hflib.a helium/$(OBJDIR)/helib.a $(OBJS)
      ifeq ($(PRECISION),double)
	$(FC) $a  $(OBJS) atom/$(OBJDIR)/hflib.a helium/$(OBJDIR)/helib.a $l -o cccd
      else
	$(FC) $a  $(OBJS) atom/$(OBJDIR)/hflib.a helium/$(OBJDIR)/helib.a $l -o cccs
      endif

cco: $e tmatcco.o de.o atom/hflib.a helium/helib.a
	$(FC) $a $e de.o tmatcco.o atom/hflib.a helium/helib.a -lmkl -lmkl_lapack -o cco

clean:
	rm -f $(OBJDIR)/*
	rm -f *.o
	$(MAKE) -C helium clean
	$(MAKE) -C atom clean

helium/$(OBJDIR)/helib.a:
	$(MAKE) -C helium

atom/$(OBJDIR)/hflib.a:
	$(MAKE) -C atom

$(OBJDIR)/main.o : main.f par.f  helium/$(OBJDIR)/modules.o
#	$(FC) $(anoopt) -c main.f  -o $@
	$(FC) $(aO1) -c main.f  -o $@

# The -O0 -C -g stops crashes in BORN ICS at high energies
#$(OBJDIR)/processt.o : processt.f par.f
#	$(FC) $a -O0 -c processt.f  -o $@
#	$(FC) $a -Mllvm -O0 -traceback -C -g -c processt.f  -o $@

$(OBJDIR)/posvmat.o : posvmat.f par.f par.pos helium/$(OBJDIR)/modules.o
	$(FC) $a  -c posvmat.f  -o $@

$(OBJDIR)/new-posvmat.o : new-posvmat.f par.f par.pos helium/$(OBJDIR)/modules.o
	$(FC) $a  -c new-posvmat.f  -o $@

$(OBJDIR)/cc.o : cc.f 
	$(FC) $a -O0 -c cc.f  -o $@


$(OBJDIR)/vmat.o : vmat.f
#	$(FC) $anomp -traceback -c vmat.f  -o $@
	$(FC) $a -c vmat.f  -o $@


$(OBJDIR)/logam.o : logam.f 
	$(FC) $a -O0 -c logam.f  -o $@

$(OBJDIR)/rest.o : rest.f par.f
	$(FC) $a -Msave -O0 -c rest.f  -o $@

$(OBJDIR)/corratom.o : corratom.f par.f paratom.f 
	$(FC) $a -c corratom.f  -o $@

$(OBJDIR)/gpuvdirect.o : gpuvdirect.f
#	pgf90 $(pga) -cudalibs -Minfo=accel,mp -lblas -mcmodel=medium -c gpuvdirect.f -o $@
#	pgf90 $(pga) -mp -cudalibs -lblas -Minfo=accel,mp -acc -ta=tesla:cc35,cc60,nordc  -mcmodel=medium -c gpuvdirect.f  -o $@
	pgf90 -Mllvm $(pga)  -mp -Minfo=accel,mp -acc -ta=tesla:cc35,cc50,cc60,nordc -mcmodel=medium -c gpuvdirect.f  -o $@

$(OBJDIR)/first.o : first.f
#	pgf90 $(pga)  -Mnoinline -O2 -Minfo=accel -mcmodel=medium -c  first.f -o $@
	pgf90 -Mllvm $(pga) -mp -O2 -Minfo=accel -acc -ta=tesla:cc35,cc50,cc60,nordc -mcmodel=medium -Mpreprocess -Iatom -Ihelium -Ihelium/$(OBJDIR) -module $(OBJDIR) -c  first.f -o $@

$(OBJDIR)/form.o : form.f
#	pgf90 $(pga)  -mp -O2 -Mnoinline -Minfo=accel -acc -ta=tesla:cc35,cc60,nordc -mcmodel=medium -c  form.f -o $@
	pgf90 -Mllvm $(pga) -mp -O2 -Mnoinline -Minfo=accel -mcmodel=medium -c  form.f -o $@

$(OBJDIR)/int.o : int.f par.f paratom.f 
	$(FC) $a -c int.f  -o $@

$(OBJDIR):
	if ( test ! -d $@ ) then ( mkdir -p $@ ) fi

#$(OBJDIR)/eremenko.o : eremenko.f90
#	$(FC) $a -c eremenko.f90 -o $@

$(OBJDIR)/%.o : %.f par.f par.for 
	$(FC) $a -c $< -o $@

